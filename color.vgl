import math

export struct Color {
  r = 0.0
  g = 0.0
  b = 0.0
  a = 1.0
}

export function rgb(ir : int, ig : int, ib : int) : Color { 
  let c = new Color({
    r = ir/255.0
    g = ig/255.0
    b = ib/255.0
  })
  return c
}

export function rgba(ir : int, ig : int, ib : int, ia : float) : Color { 
  let c = new Color({
    r = ir/255.0
    g = ig/255.0
    b = ib/255.0
    a = ia
  })
  return c
}

export function blackish(ia : float) : Color { 
  let c = new Color({
    r = 0
    g = 0
    b = 0
    a = ia
  })
  return c
}

export function interpolate(c1 : Color, c2 : Color, p : float) : Color {
  return new Color({
    r = c1.r + p * (c2.r - c1.r)
    g = c1.g + p * (c2.g - c1.g)
    b = c1.b + p * (c2.b - c1.b)
    a = c1.a + p * (c2.a - c1.a)
  })
}

#Cross-platform Virgil does not incorporate anything having to do with CSS.
#This conversion from a VzColor to a CSS string will move into JS-side-only code (Virgil JS runtime library).
#export method toCss(c: Color) : str {
#  return "rgba(" + (forceInt(c.r*255)).toStr() + "," + (forceInt(c.g*255)).toStr() + "," + (forceInt(c.b*255)).toStr() + "," + (c.a).toStr() + ")"
#}
