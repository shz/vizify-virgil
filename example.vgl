import env
import harness

# Data definition

struct Data {
  count = 0
  points = [
    0,
    3,
    6,
    10,
  ]
}

# Custom animators

method fade(rc : env.RenderContext<Data>, i : int, o : int)
: env.RenderContext<data> {
  return rc.anim(lambda(c : Canvas, cl : Clock) {
    c.globalAlpha = cl.percent
  })
}

# Custom renderers

method drawThingy(rc : env.RenderContext<Data>, x : int, y : int) {
  rc.draw(lambda(c : Canvas, cl : Clock, d : Data) {

  });
}

# Root renderer

function render(rc : env.RenderContext<Data>) {
  rc.fade(100, 100).drawThingy(10, 10)
}

# Entry point

function main(json : str, c : Canvas) : func<int, void> {
  let rc = RenderContext<Data>({
    c = c
    clock = Clock()
    config = ContextConfig()
    data = importData<Data>(json)
  })
  out duration = 2000

  return lambda(t) {
    rc.clock.update(t, duration)
    rc.render()
  }
}
