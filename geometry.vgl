export extern vizify {
  struct Point {
    x: float = 0f
    y: float = 0f
  }

  struct Size {
    width: float = 0f
    height: float = 0f
  }

  struct Rect {
    origin: Point = null
    size: Size = null
  }
}

export method containsPoint(rect: Rect, point: Point) : bool {
  if rect.origin.x <= point.x && rect.origin.y <= point.y && \
    point.x <= (rect.origin.x + rect.size.width) && point.y <= (rect.origin.y + rect.size.height) {
    return true
  } else {
    return false
  }
}

export function makeRect(x: float, y: float, w: float, h: float) : Rect {
  return new Rect {
    origin = new Point {
      x = x
      y = y
    }
    size = new Size {
      width = w
      height = h
    }
  }
}
