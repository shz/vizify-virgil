#
# Vizify platform definition.  All externed structs, functions, methods,
# etc. must be defined by the host platform.
#
export extern vizify {
  
  struct JSON {
    # This one externed property's datatype is probably incorrect, but no problem ...
    # its only purpose is to allow the virgil-resident caller to determine if the
    # node has a null value and thus avoid calling one of get()/as() functions and
    # facing an exception.  This won't be nec as soon as virgil supports try/catch.
    value : str
  }

  method asStr(j : JSON) : str
  method asInt(j : JSON) : int
  method asFloat(j : JSON) : float
  method asBool(j : JSON) : bool
  method asList(j : JSON) : list<JSON>
  method get(j : JSON, key : str) : JSON

  function parseJSON(json : str) : JSON
}
