import env

struct Clock {
  fromStart = 0  # ms from clock start
  fromEnd = 0    # ms from clock end
  percent = 0.0f # % through clock
}

method update(c : Clock, elapsed : int, duration : int) {
  c.fromState = elapsed
  c.fromEnd = duration - elapsed
  c.percent = (1.0f * elapsed) / duration
}

struct ContextConfig {
  start = 0    # ms after start to begin drawing
  end = 0      # ms before end to end drawing
  duration = 0 # duration of drawing (exclusive with end)
  operations : list<func<ContextConfig, void>> = [] # Operations stack
}

struct RenderContext<T> {
  c : Canvas = null
  clock : Clock = null
  config : ContextConfig = null
  data : T = null
}
